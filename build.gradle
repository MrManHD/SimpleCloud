/*
 * MIT License
 *
 * Copyright (C) 2020 The SimpleCloud authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.dokka' version '0.10.1'
}

allprojects {

    group 'eu.thesimplecloud.simplecloud'
    version '1.3.5-BETA'

    repositories {
        mavenCentral()
        jcenter()

        maven {
            url "https://repo.thesimplecloud.eu/artifactory/gradle-release-local/"
        }

        maven {
            url "https://libraries.minecraft.net"
        }

        maven {
            name 'velocity'
            url 'https://repo.velocitypowered.com/snapshots/'
        }

        maven {
            name 'spongepowered'
            url 'https://repo.spongepowered.org/maven'
        }

        maven {
            name 'bungeecord-repo'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }

        maven {
            name 'spigotmc-repo'
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }

    }

    project.ext {
        depedencyClientServerAPIVersion = '3.0.7-SNAPSHOT'
    }

    buildscript {
        repositories {
            mavenLocal()
        }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.dokka'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.13'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile(group: 'eu.thesimplecloud.clientserverapi', name: 'clientserverapi', version: depedencyClientServerAPIVersion) {
            transitive = false
        }
        compile(group: 'eu.thesimplecloud.jsonlib', name: 'json-lib', version: "1.0-SNAPSHOT") {
            transitive = false
        }
        compileOnly group: 'commons-io', name: 'commons-io', version: '2.6'
        compileOnly group: 'com.google.guava', name: 'guava', version: '21.0'
        compileOnly group: 'io.netty', name: 'netty-all', version: '4.1.50.Final'
        compileOnly group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.5'
        compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    jar {
        manifest {
            attributes(
                    'Implementation-Version': project.version,
            )
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
            }
        }
        repositories {
            maven {
                if (project.version.endsWith("SNAPSHOT")) {
                    url 'https://repo.thesimplecloud.eu/artifactory/list/gradle-dev-local/'
                } else {
                    url 'https://repo.thesimplecloud.eu/artifactory/list/gradle-release-local//'
                }

                credentials {
                    username = project.hasProperty("mavenUser") ? project.property("mavenUser") : ""
                    password = project.hasProperty("mavenPassword") ? project.property("mavenPassword") : ""
                }
            }
        }
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/dokka"
    }

}
